{"id":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","dependencies":[{"name":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/package.json","includedInParent":true,"mtime":1737024873893},{"name":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@atlaskit/platform-feature-flags/package.json","includedInParent":true,"mtime":1737013829736},{"name":"./resolvers","loc":{"line":1,"column":55,"index":55},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@atlaskit/platform-feature-flags/dist/esm/resolvers.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fg = fg;\nexports.getBooleanFF = getBooleanFF;\nexports.setBooleanFeatureFlagResolver = setBooleanFeatureFlagResolver;\nvar _resolvers = require(\"./resolvers\");\n/**\n * This creates a boolean flag resolver that allows calls to `getBooleanFF` inside of Platform components to use a Product's\n * feature flag client and LD project, rather than installing a feature flag client of their own, or passing those flags in via props.\n *\n * @param flagResolver\n */\nfunction setBooleanFeatureFlagResolver(flagResolver) {\n  (0, _resolvers.setBooleanResolver)(flagResolver);\n}\n\n/**\n * Returns the value of a feature flag. If the flag does not resolve, it returns the \"false\" as a default value.\n *\n * @deprecated Use {@link fg} function instead.\n * @param name\n */\nfunction getBooleanFF(name) {\n  return (0, _resolvers.resolveBooleanFlag)(name);\n}\n\n/**\n * Returns the value of a feature flag. If the flag does not resolve, it returns the \"false\" as a default value.\n *\n * @param name\n */\nfunction fg(name) {\n  return (0, _resolvers.resolveBooleanFlag)(name);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":4},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":1,"column":0},"name":"_resolvers"},{"generated":{"line":9,"column":14},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":17},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":9,"column":24},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":9,"column":7}},{"generated":{"line":16,"column":9},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":9,"column":16},"name":"setBooleanFeatureFlagResolver"},{"generated":{"line":16,"column":38},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":9,"column":45},"name":"setBooleanFeatureFlagResolver"},{"generated":{"line":16,"column":39},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":9,"column":46},"name":"flagResolver"},{"generated":{"line":16,"column":51},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":9,"column":58}},{"generated":{"line":16,"column":53},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":9,"column":60}},{"generated":{"line":17,"column":2},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":10,"column":2}},{"generated":{"line":17,"column":6},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":10,"column":2},"name":"setBooleanResolver"},{"generated":{"line":17,"column":35},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":10,"column":20}},{"generated":{"line":17,"column":37},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":10,"column":21},"name":"flagResolver"},{"generated":{"line":17,"column":49},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":10,"column":33}},{"generated":{"line":17,"column":50},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":10,"column":34}},{"generated":{"line":18,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":11,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":19,"column":7}},{"generated":{"line":26,"column":9},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":19,"column":16},"name":"getBooleanFF"},{"generated":{"line":26,"column":21},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":19,"column":28},"name":"getBooleanFF"},{"generated":{"line":26,"column":22},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":19,"column":29},"name":"name"},{"generated":{"line":26,"column":26},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":19,"column":33}},{"generated":{"line":26,"column":28},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":19,"column":35}},{"generated":{"line":27,"column":2},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":20,"column":2}},{"generated":{"line":27,"column":9},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":20,"column":9}},{"generated":{"line":27,"column":13},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":20,"column":9},"name":"resolveBooleanFlag"},{"generated":{"line":27,"column":42},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":20,"column":27}},{"generated":{"line":27,"column":44},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":20,"column":28},"name":"name"},{"generated":{"line":27,"column":48},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":20,"column":32}},{"generated":{"line":27,"column":49},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":20,"column":33}},{"generated":{"line":28,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":21,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":28,"column":7}},{"generated":{"line":35,"column":9},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":28,"column":16},"name":"fg"},{"generated":{"line":35,"column":11},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":28,"column":18},"name":"fg"},{"generated":{"line":35,"column":12},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":28,"column":19},"name":"name"},{"generated":{"line":35,"column":16},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":28,"column":23}},{"generated":{"line":35,"column":18},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":28,"column":25}},{"generated":{"line":36,"column":2},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":29,"column":2}},{"generated":{"line":36,"column":9},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":29,"column":9}},{"generated":{"line":36,"column":13},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":29,"column":9},"name":"resolveBooleanFlag"},{"generated":{"line":36,"column":42},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":29,"column":27}},{"generated":{"line":36,"column":44},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":29,"column":28},"name":"name"},{"generated":{"line":36,"column":48},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":29,"column":32}},{"generated":{"line":36,"column":49},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":29,"column":33}},{"generated":{"line":37,"column":0},"source":"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js","original":{"line":30,"column":0}}],"sources":{"node_modules/@atlaskit/platform-feature-flags/dist/esm/index.js":"import { setBooleanResolver, resolveBooleanFlag } from './resolvers';\n\n/**\n * This creates a boolean flag resolver that allows calls to `getBooleanFF` inside of Platform components to use a Product's\n * feature flag client and LD project, rather than installing a feature flag client of their own, or passing those flags in via props.\n *\n * @param flagResolver\n */\nexport function setBooleanFeatureFlagResolver(flagResolver) {\n  setBooleanResolver(flagResolver);\n}\n\n/**\n * Returns the value of a feature flag. If the flag does not resolve, it returns the \"false\" as a default value.\n *\n * @deprecated Use {@link fg} function instead.\n * @param name\n */\nexport function getBooleanFF(name) {\n  return resolveBooleanFlag(name);\n}\n\n/**\n * Returns the value of a feature flag. If the flag does not resolve, it returns the \"false\" as a default value.\n *\n * @param name\n */\nexport function fg(name) {\n  return resolveBooleanFlag(name);\n}"},"lineCount":null}},"error":null,"hash":"8dfedb62ad19c5b3bcda07270dbfeed7","cacheData":{"env":{}}}