{"id":"node_modules/@compiled/react/dist/browser/styled/index.js","dependencies":[{"name":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@compiled/react/dist/browser/styled/index.js.map","includedInParent":true,"mtime":1737013830474},{"name":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@compiled/react/src/styled/index.ts","includedInParent":true,"mtime":1737013830474},{"name":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/package.json","includedInParent":true,"mtime":1737024873893},{"name":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@compiled/react/package.json","includedInParent":true,"mtime":1737013830474},{"name":"../utils/error","loc":{"line":1,"column":33,"index":33},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@compiled/react/dist/browser/styled/index.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@compiled/react/dist/browser/utils/error.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styled = void 0;\nvar _error = require(\"../utils/error\");\n/**\n * ## Styled component\n *\n * Create a component that styles a JSX element which comes with built-in behavior such as `ref` and `as` prop support.\n * For further details [read the documentation](https://compiledcssinjs.com/docs/api-styled).\n *\n * ### Style with objects\n *\n * @example\n * ```\n * styled.div({\n *   fontSize: 12,\n * });\n * ```\n *\n * ### Style with template literals\n *\n * @example\n * ```\n * styled.div`\n *   font-size: 12px\n * `;\n * ```\n *\n * ### Compose styles with arrays\n *\n * @example\n * ```\n * import { css } from '@compiled/react';\n *\n * styled.div([\n *   { fontSize: 12 },\n *   css`font-size: 12px;`\n * ]);\n *\n * styled.div(\n *   { fontSize: 12 },\n *   css`font-size: 12px`\n * );\n * ```\n */\nconst styled = exports.styled = new Proxy({}, {\n  get() {\n    return () => {\n      // Blow up if the transformer isn't turned on.\n      // This code won't ever be executed when setup correctly.\n      throw (0, _error.createSetupError)();\n    };\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/styled/index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":10}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":13}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":20}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":49,"column":0}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":13},"generated":{"line":49,"column":6}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":19},"generated":{"line":49,"column":12}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":19},"generated":{"line":49,"column":15}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":19},"generated":{"line":49,"column":22}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":19},"generated":{"line":49,"column":23}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":19},"generated":{"line":49,"column":29}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":45},"generated":{"line":49,"column":32}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":49},"generated":{"line":49,"column":36}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":81,"column":54},"generated":{"line":49,"column":41}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":49,"column":42}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":49,"column":43}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":82,"column":4},"generated":{"line":49,"column":44}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":49,"column":46}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":84,"column":4},"generated":{"line":50,"column":2}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":84,"column":7},"generated":{"line":50,"column":5}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":84,"column":7},"generated":{"line":50,"column":6}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":84,"column":7},"generated":{"line":50,"column":8}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":85,"column":6},"generated":{"line":51,"column":4}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":85,"column":13},"generated":{"line":51,"column":11}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":85,"column":18},"generated":{"line":51,"column":17}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":86,"column":8},"generated":{"line":52,"column":6}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":87,"column":8},"generated":{"line":53,"column":6}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":88,"column":8},"generated":{"line":54,"column":6}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":88,"column":14},"generated":{"line":54,"column":12}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":88,"column":14},"generated":{"line":54,"column":16}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":88,"column":30},"generated":{"line":54,"column":39}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":88,"column":30},"generated":{"line":54,"column":41}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":88,"column":32},"generated":{"line":54,"column":42}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":55,"column":4}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":89,"column":7},"generated":{"line":55,"column":5}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":90,"column":4},"generated":{"line":56,"column":2}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":91,"column":3},"generated":{"line":57,"column":1}},{"source":"../../../src/styled/index.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":57,"column":2}}],"sources":{"../../../src/styled/index.ts":"import type { ComponentType } from 'react';\n\nimport type { CssType, CssFunction } from '../types';\nimport { createSetupError } from '../utils/error';\n\n/**\n * Extra props added to the output Styled Component.\n */\nexport interface StyledProps {\n  as?: keyof JSX.IntrinsicElements;\n}\n\nexport type ObjectInterpolation<TProps> = CssType<TProps> | CssType<TProps>[];\nexport type TemplateStringsInterpolation<TProps> = CssFunction<TProps> | CssFunction<TProps>[];\n\nexport interface StyledComponent<ComponentProps> {\n  // Allows either string or object (`` or ({}))\n  // We disable the ban types rule here as we need to join the empty object default with other props\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  <TProps = {}>(...css: ObjectInterpolation<TProps>[]): React.ComponentType<\n    TProps & ComponentProps & StyledProps\n  >;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  <TProps = {}>(\n    template: TemplateStringsArray,\n    ...interpolations: TemplateStringsInterpolation<TProps>[]\n  ): React.ComponentType<TProps & ComponentProps & StyledProps>;\n}\n\n// This creates the DOM element types for `styled.tag`, e.g. `span`, `div`, `h1`, etc.\nexport type StyledComponentMap = {\n  [Tag in keyof JSX.IntrinsicElements]: StyledComponent<JSX.IntrinsicElements[Tag]>;\n};\n\nexport interface CreateStyledComponent extends StyledComponentMap {\n  // Typing to enable consumers to compose components, e.g: `styled(Component)`\n  <TInheritedProps>(Component: ComponentType<TInheritedProps>): StyledComponent<TInheritedProps>;\n}\n\n/**\n * ## Styled component\n *\n * Create a component that styles a JSX element which comes with built-in behavior such as `ref` and `as` prop support.\n * For further details [read the documentation](https://compiledcssinjs.com/docs/api-styled).\n *\n * ### Style with objects\n *\n * @example\n * ```\n * styled.div({\n *   fontSize: 12,\n * });\n * ```\n *\n * ### Style with template literals\n *\n * @example\n * ```\n * styled.div`\n *   font-size: 12px\n * `;\n * ```\n *\n * ### Compose styles with arrays\n *\n * @example\n * ```\n * import { css } from '@compiled/react';\n *\n * styled.div([\n *   { fontSize: 12 },\n *   css`font-size: 12px;`\n * ]);\n *\n * styled.div(\n *   { fontSize: 12 },\n *   css`font-size: 12px`\n * );\n * ```\n */\nexport const styled: CreateStyledComponent = new Proxy(\n  {},\n  {\n    get() {\n      return () => {\n        // Blow up if the transformer isn't turned on.\n        // This code won't ever be executed when setup correctly.\n        throw createSetupError();\n      };\n    },\n  }\n) as any;\n"},"lineCount":null}},"error":null,"hash":"1158c48804eaf1a0d98363acce69da56","cacheData":{"env":{}}}