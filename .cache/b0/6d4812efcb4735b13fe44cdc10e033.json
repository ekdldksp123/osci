{"id":"node_modules/@tanstack/react-query/build/lib/useQueries.esm.js","dependencies":[{"name":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useQueries.esm.js.map","includedInParent":true,"mtime":1737013833255},{"name":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/package.json","includedInParent":true,"mtime":1737024873893},{"name":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/package.json","includedInParent":true,"mtime":1737013833255},{"name":"react","loc":{"line":2,"column":23,"index":37},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useQueries.esm.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/react/index.js"},{"name":"@tanstack/query-core","loc":{"line":3,"column":47,"index":93},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useQueries.esm.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/query-core/build/lib/index.esm.js"},{"name":"./useSyncExternalStore.esm.js","loc":{"line":4,"column":37,"index":154},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useQueries.esm.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.esm.js"},{"name":"./QueryClientProvider.esm.js","loc":{"line":5,"column":31,"index":218},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useQueries.esm.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.esm.js"},{"name":"./isRestoring.esm.js","loc":{"line":6,"column":31,"index":281},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useQueries.esm.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/isRestoring.esm.js"},{"name":"./QueryErrorResetBoundary.esm.js","loc":{"line":7,"column":43,"index":348},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useQueries.esm.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.esm.js"},{"name":"./errorBoundaryUtils.esm.js","loc":{"line":8,"column":89,"index":473},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useQueries.esm.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.esm.js"},{"name":"./suspense.esm.js","loc":{"line":9,"column":75,"index":579},"parent":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/useQueries.esm.js","resolved":"/Users/vinchaekim/Documents/workspace/react-typescript-parcel-starter/node_modules/@tanstack/react-query/build/lib/suspense.esm.js"}],"generated":{"js":"\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useQueries = useQueries;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _queryCore = require(\"@tanstack/query-core\");\nvar _useSyncExternalStoreEsm = require(\"./useSyncExternalStore.esm.js\");\nvar _QueryClientProviderEsm = require(\"./QueryClientProvider.esm.js\");\nvar _isRestoringEsm = require(\"./isRestoring.esm.js\");\nvar _QueryErrorResetBoundaryEsm = require(\"./QueryErrorResetBoundary.esm.js\");\nvar _errorBoundaryUtilsEsm = require(\"./errorBoundaryUtils.esm.js\");\nvar _suspenseEsm = require(\"./suspense.esm.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction useQueries({\n  queries,\n  context\n}) {\n  const queryClient = (0, _QueryClientProviderEsm.useQueryClient)({\n    context\n  });\n  const isRestoring = (0, _isRestoringEsm.useIsRestoring)();\n  const errorResetBoundary = (0, _QueryErrorResetBoundaryEsm.useQueryErrorResetBoundary)();\n  const defaultedQueries = React.useMemo(() => queries.map(options => {\n    const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure the results are already in fetching state before subscribing or updating options\n\n    defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic';\n    return defaultedOptions;\n  }), [queries, queryClient, isRestoring]);\n  defaultedQueries.forEach(query => {\n    (0, _suspenseEsm.ensureStaleTime)(query);\n    (0, _errorBoundaryUtilsEsm.ensurePreventErrorBoundaryRetry)(query, errorResetBoundary);\n  });\n  (0, _errorBoundaryUtilsEsm.useClearResetErrorBoundary)(errorResetBoundary);\n  const [observer] = React.useState(() => new _queryCore.QueriesObserver(queryClient, defaultedQueries));\n  const optimisticResult = observer.getOptimisticResult(defaultedQueries);\n  (0, _useSyncExternalStoreEsm.useSyncExternalStore)(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(_queryCore.notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, {\n      listeners: false\n    });\n  }, [defaultedQueries, observer]);\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) => (0, _suspenseEsm.shouldSuspend)(defaultedQueries[index], result, isRestoring));\n  const suspensePromises = shouldAtLeastOneSuspend ? optimisticResult.flatMap((result, index) => {\n    const options = defaultedQueries[index];\n    const queryObserver = observer.getObservers()[index];\n    if (options && queryObserver) {\n      if ((0, _suspenseEsm.shouldSuspend)(options, result, isRestoring)) {\n        return (0, _suspenseEsm.fetchOptimistic)(options, queryObserver, errorResetBoundary);\n      } else if ((0, _suspenseEsm.willFetch)(result, isRestoring)) {\n        void (0, _suspenseEsm.fetchOptimistic)(options, queryObserver, errorResetBoundary);\n      }\n    }\n    return [];\n  }) : [];\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises);\n  }\n  const observerQueries = observer.getQueries();\n  const firstSingleResultWhichShouldThrow = optimisticResult.find((result, index) => {\n    var _defaultedQueries$ind, _defaultedQueries$ind2;\n    return (0, _errorBoundaryUtilsEsm.getHasError)({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: (_defaultedQueries$ind = (_defaultedQueries$ind2 = defaultedQueries[index]) == null ? void 0 : _defaultedQueries$ind2.useErrorBoundary) != null ? _defaultedQueries$ind : false,\n      query: observerQueries[index]\n    });\n  });\n  if (firstSingleResultWhichShouldThrow != null && firstSingleResultWhichShouldThrow.error) {\n    throw firstSingleResultWhichShouldThrow.error;\n  }\n  return optimisticResult;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/useQueries.ts","name":null,"original":{"line":151,"column":7},"generated":{"line":18,"column":0}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":151,"column":7},"generated":{"line":18,"column":9}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":151,"column":7},"generated":{"line":18,"column":19}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":151,"column":7},"generated":{"line":18,"column":20}},{"source":"../../src/useQueries.ts","name":"context","original":{"line":153,"column":2},"generated":{"line":20,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":151,"column":44},"generated":{"line":21,"column":0}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":151,"column":44},"generated":{"line":21,"column":1}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":151,"column":44},"generated":{"line":21,"column":3}},{"source":"../../src/useQueries.ts","name":"context","original":{"line":158,"column":39},"generated":{"line":23,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":158,"column":37},"generated":{"line":24,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":158,"column":37},"generated":{"line":24,"column":3}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":158,"column":37},"generated":{"line":24,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":8}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":24}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":27}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":32}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":33}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":40}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":41}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":47}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":54}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":55}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":58}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":59}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":66}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":162,"column":2},"generated":{"line":27,"column":70}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":4}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":20}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":21}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":39}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":42}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":53}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":56}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":69}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":72}},{"source":"../../src/useQueries.ts","name":"defaultedOptions","original":{"line":168,"column":8},"generated":{"line":30,"column":84}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":172,"column":8},"generated":{"line":31,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":172,"column":8},"generated":{"line":31,"column":11}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":172,"column":8},"generated":{"line":31,"column":27}},{"source":"../../src/useQueries.ts","name":"defaultedQueries","original":{"line":177,"column":2},"generated":{"line":33,"column":2}},{"source":"../../src/useQueries.ts","name":"defaultedQueries","original":{"line":177,"column":2},"generated":{"line":33,"column":18}},{"source":"../../src/useQueries.ts","name":"defaultedQueries","original":{"line":177,"column":2},"generated":{"line":33,"column":19}},{"source":"../../src/useQueries.ts","name":"defaultedQueries","original":{"line":177,"column":2},"generated":{"line":33,"column":26}},{"source":"../../src/useQueries.ts","name":"defaultedQueries","original":{"line":177,"column":2},"generated":{"line":33,"column":27}},{"source":"../../src/useQueries.ts","name":"defaultedQueries","original":{"line":177,"column":2},"generated":{"line":33,"column":32}},{"source":"../../src/useQueries.ts","name":"defaultedQueries","original":{"line":177,"column":2},"generated":{"line":33,"column":36}},{"source":"../../src/useQueries.ts","name":"ensurePreventErrorBoundaryRetry","original":{"line":179,"column":4},"generated":{"line":35,"column":4}},{"source":"../../src/useQueries.ts","name":"ensurePreventErrorBoundaryRetry","original":{"line":179,"column":4},"generated":{"line":35,"column":8}},{"source":"../../src/useQueries.ts","name":"ensurePreventErrorBoundaryRetry","original":{"line":179,"column":4},"generated":{"line":35,"column":62}},{"source":"../../src/useQueries.ts","name":"ensurePreventErrorBoundaryRetry","original":{"line":179,"column":4},"generated":{"line":35,"column":64}},{"source":"../../src/useQueries.ts","name":"ensurePreventErrorBoundaryRetry","original":{"line":179,"column":4},"generated":{"line":35,"column":69}},{"source":"../../src/useQueries.ts","name":"ensurePreventErrorBoundaryRetry","original":{"line":179,"column":4},"generated":{"line":35,"column":71}},{"source":"../../src/useQueries.ts","name":"ensurePreventErrorBoundaryRetry","original":{"line":179,"column":4},"generated":{"line":35,"column":89}},{"source":"../../src/useQueries.ts","name":"ensurePreventErrorBoundaryRetry","original":{"line":179,"column":4},"generated":{"line":35,"column":90}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":8}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":9}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":17}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":18}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":21}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":26}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":27}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":35}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":36}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":42}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":46}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":72}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":73}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":84}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":86}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":102}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":103}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":184,"column":2},"generated":{"line":38,"column":104}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":8}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":24}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":27}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":35}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":36}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":55}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":56}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":72}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":188,"column":2},"generated":{"line":39,"column":73}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":2}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":6}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":51}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":53}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":58}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":59}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":70}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":71}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":84}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":88}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":99}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":102}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":108}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":117}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":120}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":128}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":129}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":138}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":139}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":163}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":164}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":174}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":175}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":188}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":189}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":190}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":192}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":193}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":201}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":203}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":214}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":215}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":216}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":218}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":224}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":232}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":233}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":249}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":250}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":251}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":253}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":259}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":267}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":268}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":284}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":285}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":286}},{"source":"../../src/useQueries.ts","name":"useSyncExternalStore","original":{"line":190,"column":2},"generated":{"line":40,"column":287}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":203,"column":4},"generated":{"line":42,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":204,"column":4},"generated":{"line":43,"column":4}},{"source":"../../src/useQueries.ts","name":"observer","original":{"line":205,"column":4},"generated":{"line":44,"column":4}},{"source":"../../src/useQueries.ts","name":"observer","original":{"line":205,"column":4},"generated":{"line":44,"column":12}},{"source":"../../src/useQueries.ts","name":"observer","original":{"line":205,"column":4},"generated":{"line":44,"column":13}},{"source":"../../src/useQueries.ts","name":"observer","original":{"line":205,"column":4},"generated":{"line":44,"column":23}},{"source":"../../src/useQueries.ts","name":"observer","original":{"line":205,"column":4},"generated":{"line":44,"column":24}},{"source":"../../src/useQueries.ts","name":"observer","original":{"line":205,"column":4},"generated":{"line":44,"column":40}},{"source":"../../src/useQueries.ts","name":"observer","original":{"line":205,"column":4},"generated":{"line":44,"column":42}},{"source":"../../src/useQueries.ts","name":"listeners","original":{"line":205,"column":44},"generated":{"line":45,"column":6}},{"source":"../../src/useQueries.ts","name":"listeners","original":{"line":205,"column":44},"generated":{"line":45,"column":15}},{"source":"../../src/useQueries.ts","name":"listeners","original":{"line":205,"column":44},"generated":{"line":45,"column":17}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":47,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":47,"column":3}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":47,"column":5}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":47,"column":6}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":47,"column":22}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":47,"column":24}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":47,"column":32}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":47,"column":33}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":206,"column":3},"generated":{"line":47,"column":34}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":8}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":24}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":27}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":50}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":53}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":69}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":70}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":77}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":78}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":79}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":85}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":87}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":92}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":49,"column":97}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":214,"column":8},"generated":{"line":50,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":214,"column":8},"generated":{"line":50,"column":10}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":214,"column":8},"generated":{"line":50,"column":17}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":214,"column":8},"generated":{"line":50,"column":20}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":214,"column":8},"generated":{"line":50,"column":36}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":214,"column":8},"generated":{"line":50,"column":37}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":214,"column":8},"generated":{"line":50,"column":42}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":214,"column":8},"generated":{"line":50,"column":43}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":10}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":23}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":26}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":34}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":35}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":47}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":48}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":49}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":50}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":55}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":215,"column":8},"generated":{"line":51,"column":56}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":8}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":15}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":19}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":47}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":49}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":56}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":58}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":71}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":73}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":91}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":219,"column":12},"generated":{"line":54,"column":92}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":8}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":13}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":17}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":45}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":47}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":54}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":56}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":69}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":71}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":89}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":221,"column":12},"generated":{"line":56,"column":90}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":222,"column":11},"generated":{"line":57,"column":6}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":223,"column":9},"generated":{"line":58,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":224,"column":8},"generated":{"line":59,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":224,"column":8},"generated":{"line":59,"column":11}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":224,"column":8},"generated":{"line":59,"column":13}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":228,"column":2},"generated":{"line":61,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":228,"column":2},"generated":{"line":61,"column":6}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":228,"column":2},"generated":{"line":61,"column":22}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":228,"column":2},"generated":{"line":61,"column":23}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":228,"column":2},"generated":{"line":61,"column":29}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":228,"column":2},"generated":{"line":61,"column":32}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":228,"column":2},"generated":{"line":61,"column":33}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":228,"column":2},"generated":{"line":61,"column":35}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":62,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":62,"column":10}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":62,"column":17}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":62,"column":18}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":62,"column":21}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":62,"column":22}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":62,"column":38}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":229,"column":4},"generated":{"line":62,"column":39}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":230,"column":3},"generated":{"line":63,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":64,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":64,"column":8}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":64,"column":23}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":64,"column":26}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":64,"column":34}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":64,"column":35}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":64,"column":45}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":64,"column":46}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":64,"column":47}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":66,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":66,"column":8}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":66,"column":29}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":66,"column":31}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":66,"column":53}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":67,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":67,"column":11}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":67,"column":15}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":67,"column":49}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":67,"column":51}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":234,"column":18},"generated":{"line":72,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":234,"column":18},"generated":{"line":72,"column":5}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":234,"column":18},"generated":{"line":72,"column":6}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":73,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":73,"column":3}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":233,"column":4},"generated":{"line":73,"column":4}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":6}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":39}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":43}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":47}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":51}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":84}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":85}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":90}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":242,"column":2},"generated":{"line":74,"column":92}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":244,"column":3},"generated":{"line":76,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":246,"column":2},"generated":{"line":77,"column":2}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":246,"column":2},"generated":{"line":77,"column":9}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":246,"column":2},"generated":{"line":77,"column":25}},{"source":"../../src/useQueries.ts","name":null,"original":{"line":247,"column":1},"generated":{"line":78,"column":0}}],"sources":{"../../src/useQueries.ts":"'use client'\nimport * as React from 'react'\n\nimport { QueriesObserver, notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport {\n  ensureStaleTime,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type { UseQueryOptions, UseQueryResult } from './types'\n\n// This defines the `UseQueryOptions` that are accepted in `QueriesOptions` & `GetOptions`.\n// - `context` is omitted as it is passed as a root-level option to `useQueries` instead.\ntype UseQueryOptionsForUseQueries<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = Omit<UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>, 'context'>\n\n// Avoid TS depth-limit error in case of large array literal\ntype MAXIMUM_DEPTH = 20\n\ntype GetOptions<T> =\n  // Part 1: responsible for applying explicit type parameter to function arguments, if object { queryFnData: TQueryFnData, error: TError, data: TData }\n  T extends {\n    queryFnData: infer TQueryFnData\n    error?: infer TError\n    data: infer TData\n  }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<unknown, TError, TData>\n    : // Part 2: responsible for applying explicit type parameter to function arguments, if tuple [TQueryFnData, TError, TData]\n    T extends [infer TQueryFnData, infer TError, infer TData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData>\n    : // Part 3: responsible for inferring and enforcing type if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, unknown, TData, TQueryKey>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey> }\n    ? UseQueryOptionsForUseQueries<\n        TQueryFnData,\n        unknown,\n        TQueryFnData,\n        TQueryKey\n      >\n    : // Fallback\n      UseQueryOptionsForUseQueries\n\ntype GetResults<T> =\n  // Part 1: responsible for mapping explicit type parameter to function result, if object\n  T extends { queryFnData: any; error?: infer TError; data: infer TData }\n    ? UseQueryResult<TData, TError>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryResult<TData, TError>\n    : // Part 2: responsible for mapping explicit type parameter to function result, if tuple\n    T extends [any, infer TError, infer TData]\n    ? UseQueryResult<TData, TError>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryResult<TQueryFnData>\n    : // Part 3: responsible for mapping inferred type to results, if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<unknown, any>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryResult<TData>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, any> }\n    ? UseQueryResult<TQueryFnData>\n    : // Fallback\n      UseQueryResult\n\n/**\n * QueriesOptions reducer recursively unwraps function arguments to infer/enforce type param\n */\nexport type QueriesOptions<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryOptionsForUseQueries[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetOptions<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesOptions<[...Tail], [...Result, GetOptions<Head>], [...Depth, 1]>\n  : unknown[] extends T\n  ? T\n  : // If T is *some* array but we couldn't assign unknown[] to it, then it must hold some known/homogenous type!\n  // use this to infer the param types in the case of Array.map() argument\n  T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      infer TQueryKey\n    >[]\n  ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData, TQueryKey>[]\n  : // Fallback\n    UseQueryOptionsForUseQueries[]\n\n/**\n * QueriesResults reducer recursively maps type param to results\n */\nexport type QueriesResults<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryResult[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetResults<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesResults<[...Tail], [...Result, GetResults<Head>], [...Depth, 1]>\n  : T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      any\n    >[]\n  ? // Dynamic-size (homogenous) UseQueryOptions array: map directly to array of results\n    UseQueryResult<unknown extends TData ? TQueryFnData : TData, TError>[]\n  : // Fallback\n    UseQueryResult[]\n\nexport function useQueries<T extends any[]>({\n  queries,\n  context,\n}: {\n  queries: readonly [...QueriesOptions<T>]\n  context?: UseQueryOptions['context']\n}): QueriesResults<T> {\n  const queryClient = useQueryClient({ context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n\n  const defaultedQueries = React.useMemo(\n    () =>\n      queries.map((options) => {\n        const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n        // Make sure the results are already in fetching state before subscribing or updating options\n        defaultedOptions._optimisticResults = isRestoring\n          ? 'isRestoring'\n          : 'optimistic'\n\n        return defaultedOptions\n      }),\n    [queries, queryClient, isRestoring],\n  )\n\n  defaultedQueries.forEach((query) => {\n    ensureStaleTime(query)\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary)\n  })\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () => new QueriesObserver(queryClient, defaultedQueries),\n  )\n\n  const optimisticResult = observer.getOptimisticResult(defaultedQueries)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, { listeners: false })\n  }, [defaultedQueries, observer])\n\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) =>\n    shouldSuspend(defaultedQueries[index], result, isRestoring),\n  )\n\n  const suspensePromises = shouldAtLeastOneSuspend\n    ? optimisticResult.flatMap((result, index) => {\n        const options = defaultedQueries[index]\n        const queryObserver = observer.getObservers()[index]\n\n        if (options && queryObserver) {\n          if (shouldSuspend(options, result, isRestoring)) {\n            return fetchOptimistic(options, queryObserver, errorResetBoundary)\n          } else if (willFetch(result, isRestoring)) {\n            void fetchOptimistic(options, queryObserver, errorResetBoundary)\n          }\n        }\n        return []\n      })\n    : []\n\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises)\n  }\n  const observerQueries = observer.getQueries()\n  const firstSingleResultWhichShouldThrow = optimisticResult.find(\n    (result, index) =>\n      getHasError({\n        result,\n        errorResetBoundary,\n        useErrorBoundary: defaultedQueries[index]?.useErrorBoundary ?? false,\n        query: observerQueries[index]!,\n      }),\n  )\n\n  if (firstSingleResultWhichShouldThrow?.error) {\n    throw firstSingleResultWhichShouldThrow.error\n  }\n\n  return optimisticResult as QueriesResults<T>\n}\n"},"lineCount":null}},"error":null,"hash":"2e151cca0dc26931e80421bd7fdfb2ab","cacheData":{"env":{}}}